const express = require('express');
const router= express.Router();
const Donor = require('../module/donor')

//get all donors
router.get('/donor/select', async (req, res) => {
    try{
        const donor= await Donor.find()
        res.json(donor)
    }catch(err){
        res.json({message : err})
        console.log(err)
    }
  });
  //get specific donors
router.get('/donor/:id', async (req, res) => {
    try{
        const donor= await Donor.findById(req.params.id)
        res.json(donor)
    }catch(err){
        res.json({message : err})
        console.log(err)
    }
  });
//insert donor
router.post('/donor/insert', async (req, res) => {
    const donor = new Donor({
        Dname: req.body.Dname,
        Dage: req.body.Dage,
        Dphone: req.body.Dphone,
        Aid: req.body.Aid,
        Bid: req.body.Bid,
        Pid: req.body.Pid
    })
   try{
   const saved= await donor.save()
    res.json(saved)
   }catch(err){
       res.json({message : err})
   }
  });

  //bulk insert 
router.post('/donor/bulkinsert', async (req, res) => {
    try{
        const saved= await Donor.insertMany(req.body)
         res.json(saved)
         
        }catch(err){
            res.json({message : err})
            console.log(err)
        }

  });

  //delete specific donor
  router.delete('/donor/delete/:id', async (req, res) => {
    try{
        const deleteddonor= await Donor.remove({_id :req.params.id})
        res.json(deleteddonor)
    }catch(err){
        res.json({message : err})
        console.log(err)
    }
  });
  //update donor
  router.patch('/donor/update/:id', async (req, res) => {
    try{
        const updateddonor= await Donor.updateOne({_id :req.params.id},{ $set:{
            Dname: req.body.Dname,
            Dage: req.body.Dage,
            Dphone: req.body.Dphone,
            Aid: req.body.Aid,
            Bid: req.body.Bid,
            Pid: req.body.Pid
        }});
        res.json(updateddonor)
    }catch(err){
        res.json({message : err})
        console.log(err)
    }
  });

  //soft delete specific donor
  router.delete('/donor/softdelete/:id', async (req, res) => {
    try{
        const deleteddonor= await Donor.softDelete({_id :req.params.id})
        res.json(deleteddonor)
    }catch(err){
        res.json({message : err})
        console.log(err)
    }
  });
  module.exports= router